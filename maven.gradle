// Setup

// 0) Setup your sonatype credentials by editing/creating ~/.gradle/gradle.properties and enter:
// signing.keyId=<HEXADECIMCAL KEY ID RETRIVABLE VIA gpg --list-keys>
// signing.password=<KEY PASSWORD>
// signing.secretKeyRingFile=<PATH TO KEY RING, USUALLY ~/.gnupg/secring.gpg>
// sonatypeUsername=<SONATYPE USERNAME OR WHATEVER YOU USE>
// sonatypePassword=<CORRESPONDING PASSWORD>

// 1) Setup your build.gradle for your android project and add this one line of code which imports this gist:
// apply from: 'https://raw.github.com/koush/mvn-repo/master/maven.gradle'

// 2) gradle clean && gradle build && gradle uploadArchives

// 3) That's it!


apply plugin: 'maven'
apply plugin: 'signing'


afterEvaluate { project ->

  if (project.hasProperty('signing.keyId')) {
    // TODO: Can't we get the AndroidManifest from manifest.srcFile or similiar?
    android_manifest = new XmlParser(false, false).parseText(new File(project.projectDir, 'src/main/AndroidManifest.xml').getText())
    package_name = android_manifest.'@package'
    artifact_id = artifactName
    project.version = versionName
    project.group = artifactGroupId

    uploadArchives {
        repositories {
            mavenDeployer {

                beforeDeployment { MavenDeployment deployment -> signPom(deployment) }
                pom.groupId = artifactGroupId
                pom.artifactId = artifactName
                pom.version = versionName

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                  authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                   name projectTitle
                   packaging 'aar'
                   description projectDesc
                   url htmlUrl

                   scm {
                       url gitUrl
                       connection gitUrl
                       developerConnection sshUrl
                   }

                   licenses {
                       license {
                           name 'The Apache Software License, Version 2.0'
                           url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                           distribution 'repo'
                       }
                   }

                   developers {
                       developer {
                           id devId
                           name devName
                       }
                   }
               }
            }
        }
    }

    signing {
        sign configurations.archives
    }

    task androidJavadocs(type: Javadoc) {
       source = android.sourceSets.main.allJava
    }

    task androidJavadocsJar(type: Jar) {
      classifier = 'javadoc'
      basename = artifact_id
      from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
      classifier = 'sources'
      basename = artifact_id
      from android.sourceSets.main.allSource 
    } 

    artifacts {
      archives androidSourcesJar
      archives androidJavadocsJar
    }
  }
}

